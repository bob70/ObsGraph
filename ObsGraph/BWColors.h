#ifndef BWCOLORS_H
#define BWCOLORS_H

const DWORD BWColorsRGB[188] = 
	{
		0x000000, 0x000018,	0x000850, 0x001034, 0x001400, 0x002800,	0x004400, 0x006400,	0x00709c, 0x00e4fc,
		0x042064, 0x080808,	0x083498, 0x088008, 0x0c0020, 0x0c0c0c, 0x0c1424, 0x0c48cc,	0x100000, 0x101010,
		0x10543c, 0x10fc18,	0x14347c, 0x181410,	0x181818, 0x18acb8, 0x190019, 0x1c1008, 0x1c1c20, 0x1c1c2c,
		0x2018b8, 0x209070, 0x240000, 0x24244c, 0x2424fc, 0x243448, 0x243c64, 0x249824, 0x28180c, 0x282828,
		0x282830, 0x282c68, 0x2c2418, 0x2c3084, 0x2cb494, 0x304054, 0x305084, 0x340000, 0x341008, 0x34200c,
		0x342820, 0x343434, 0x343cac, 0x344428, 0x344c6c, 0x381020, 0x383024, 0x383c44, 0x385c94, 0x3a003a,
		0x3c9c3c, 0x405874, 0x4068d4, 0x406c3c, 0x443408, 0x444444, 0x480000, 0x481c50, 0x482414, 0x483018,
		0x484858, 0x48688c, 0x486c50, 0x4874b4, 0x4c3c38, 0x4c4030, 0x4c4c4c, 0x4c8050, 0x504014, 0x508c5c,
		0x542820, 0x5484c4, 0x585858, 0x585868, 0x5880a4, 0x58b058, 0x5c2c14, 0x5c5040, 0x5c5414, 0x5ca078,
		0x600000, 0x601804, 0x60607c, 0x6094d4, 0x6490fc, 0x6494bc, 0x683078, 0x683c24, 0x684c34, 0x686868,
		0x686894, 0x68946c, 0x68b868, 0x703014, 0x706420, 0x70a8cc, 0x746838, 0x74a47c, 0x784c2c, 0x78645c,
		0x78846c, 0x78b4ec, 0x7c3830, 0x7c4018, 0x7c5050, 0x7cacfc, 0x80c480, 0x840404, 0x846044, 0x847474,
		0x84849c, 0x88409C, 0x8c2808, 0x8c5430, 0x8c8034, 0x8cc0d8, 0x9090b8, 0x90b894, 0x946c00, 0x94d494,
		0x94dcf4, 0x985c40, 0x987454, 0x98948c, 0x98c4a8, 0x9c9040, 0xa0541c, 0xa4341c, 0xa80808, 0xa89454,
		0xac8c7c, 0xac9894, 0xacccb0, 0xacdce8, 0xacfcfc, 0xb0745c, 0xb09018, 0xb0b0b0, 0xb4703c, 0xb85444,
		0xb8b8e8, 0xbc6824, 0xbca45c, 0xbcb834, 0xc44c18, 0xc4c0bc, 0xc81818, 0xc87854, 0xccb860, 0xcce0d0,
		0xccf8f8, 0xd06420, 0xdc9434, 0xdcdc3c, 0xe02c2c, 0xe09454, 0xe0a484, 0xe82020, 0xe85014, 0xe87824,
		0xe8d880, 0xecc454, 0xecc4b0, 0xf0f0f0, 0xf40404, 0xf4e490, 0xf88c14, 0xf8ac3c, 0xfc2020, 0xfc6854,
		0xfc9468, 0xfccc2c, 0xfcfc00, 0xfcfc38, 0xfcfc7c, 0xfcfca4, 0xfcfcc0, 0xffffff
	};

const byte BWColorsByte[188] = 
	{
		0, 40, 42, 41, 181, 182, 183, 184, 49, 128, 160, 138, 162, 185, 118, 64, 192, 165, 168, 139, 157, 117,
		45, 65, 140, 52, 15, 86, 66, 119, 123, 158, 169, 120, 53, 43, 193, 186, 87, 141, 67, 121, 16, 122, 159,
		44, 194, 170, 88, 89, 91, 142, 124, 34, 46, 90, 68, 69, 195, 14, 187, 47, 51, 35, 92, 144, 171, 161, 17,
		93, 145, 48, 36, 196, 143, 66, 71, 37, 96, 38, 95, 197, 73, 146, 50, 188, 18, 72, 97, 39, 94, 172, 149,
		198, 126, 54, 163, 20, 99, 74, 125, 76, 189, 19, 101, 55, 147, 77, 22, 148, 75, 199, 100, 21, 102, 127,
		190, 98, 25, 150, 151, 164, 173, 24, 106, 56, 154, 79, 104, 191, 57, 105, 107, 78, 80, 129, 26, 103, 23,
		130, 152, 153, 82, 58, 59, 110, 109, 81, 29, 108, 155, 28, 131, 166, 27, 83, 174, 112, 132, 84, 60, 30,
		31, 167, 175, 32, 114, 176, 177, 179, 133, 33, 134, 85, 111, 62, 156, 180, 178, 113, 115, 116, 61, 135,
		136, 137, 63, 255
	};

/*  
function RGBToBWColorByte(RGB: Dword): Byte;
function BWColorByteToRGB(dByte: Dword): Dword;
*/

byte RGBToBWColorByte(DWORD rgb);
DWORD BWColorByteToRGB(DWORD dByte);

#endif